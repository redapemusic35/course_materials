[{"id":0,"href":"/course-resources/","title":"Course Resources","section":"Blah Man","content":" Meta # Overview # There are a number of course resources you should be aware of. This space is meant to provide quick links to these items.\nCourse Website # This course website will be updated regularly throughout the semester. There are dedicated pages for each week as well as the final project. Each page include links to lecture slides, YouTube videos, and notes about specific topics. There are also additional resources for navigating topics and course software.\nSyllabus # The syllabus is available online. This spells out everythng that is required for the course. If you would like a .pdf record of the syllabus, you can download a \u0026ldquo;first day\u0026rdquo; version of the syllabus (that will not be updated subsequently) on the syllabus page.\nGitHub Organization # GitHub will be used to host all course content so that it can easily be downloaded. Links to specific repositories and documents are available on each lecture page for this website, and your individual assignment repository can be viewed by going to the GitHub organization and searching through the available repos.\nIt is highlighy recommended that you clone all course repositories so that you can easily keep them updated. Details on this process can be found in my Sociospatial Data Science handbook.\nSlack # Slack is a communication platform for groups. We\u0026rsquo;ll use Slack this semester to stay in touch, provide updates on the course, and as a space for virtual office hours.\nReadings # Below are quick links to web-based readings. Please consult the syllabus for a full list of readings as well as dates when they need to be competed.\nElectronic Reserves OpenIntro Statistics `R` for Data Science Sociospatial Data Science Speaker Deck # Given their large size, slides for lectures are not hosted in GitHub. I use GitHub\u0026rsquo;s service Speaker Deck to host slides for this course. A slide deck is embedded in each lecture page on the course website and will be updated with the latest version of the slides before each lecture. You do not need a Speaker Deck account to view or download the slides.\nTo view slides in a larger format, hover your mouse over the given deck and click on the lecture title, which will begin with \u0026ldquo;SOC 4015 \u0026amp; SOC 5050\u0026hellip;\u0026rdquo;. This will take you take you to a larger view of the lecture.\nTo download slides from this larger view, look for the download icon in the lower right-hand corner of the screen. It will be an icon with a downward pointing arrow.\n"},{"id":1,"href":"/course-onboarding/","title":"Course Onboarding","section":"Blah Man","content":" Meta # Overview # Before you begin the semester, there are a number of things that you should do to help set yourself up for success. All of the applicable sections below should be completed before our first class on August 27th. Before you do anything else, though, you should read through the Syllabus . Make sure you have a good sense of what is required for the course. If you have questions, bring them to the first day of class!\nOnboarding Checklist # This section provides details on completing the following steps:\nRead through the Syllabus Account signups: Slack GitHub Make some decisions about accessing course software Get access to books Purchase other required materials Read through the Code of Conduct Complete the student information sheet and diagnostic assessment Complete the initial coursework Account Signups # Get Started with Slack # We\u0026rsquo;ll be using the messaging platform Slack as a space for \u0026ldquo;virtual office hours\u0026rdquo;. Slack is a messaging system used by teams of all kinds. If you can text, you can use Slack. You will need to sign-up for the SOC 4015 \u0026amp; SOC 5050 Slack organization here . You will need to complete the signup process even if you use Slack for other purposes. Consider installing either the desktop or the mobile apps for Slack to keep in touch and receive push alerts!\nGet Started with GitHub # The service that is hosting this website is called GitHub . GitHub is used by programmers, data scientists, and researchers for hosting computer code, data, and project materials (like websites). We will be using GitHub extensively this semester. You will need a free account, which you can sign up for one from GitHub\u0026#39;s homepage . If you already have a GitHub account, you do not need a new one.\nOnce you have a GitHub user name, send Chris a Direct Message via Slack with it so that you can be added to the SOC 4015 \u0026amp; SOC 5050 organization . After you have been added to the organization, you should find your assignments repository and check the Issues tab. There should be an open Issue describing how feedback will be disseminated this semester. Please read it and then close the issue so that we know you\u0026rsquo;ve seen it.\nCourse Software # There are two options for accessing the course software, and some instructions for how install it. Please read through these options carefully and make the decision that is best for you.\nOptions for Accessing Software # One option is to rely on the computers in our classroom, and - lucky you(!) - you get 24-hour access to Morrissey Hall for the semester. If you decide to go this route, you can go right to the course software page to continue setting up your computer. Details on the extent of setup required will be posted there since it is subject to change. Make sure you know how to use Windows Explorer, especially if you are a regular macOS user. Here are some tips. Another option for accessing the software is to use your own computer. If you decide to go this route, please read the next subsection on computer prep, and then head over to the course software page to continue setting up your computer. As long as you have a relatively new computer (within the last few years), you should have no problem using any of the applications for this class.\nComputer Prep # If you are using your own computer, you should do the following before proceeding:\nMake sure your operating system is up-to-date. If you are able, I would also recommend upgrading your computer to the most recent release of its operating system that the computer can run.\nOn macOS, you can do this through the App Store Both Windows 7 and Windows 10 have system update tools. We\u0026rsquo;ll be sharing computer files throughout the semester, so you should ensure that you have functioning anti-virus software and that it is up-to-date. You can get Symantec EndPoint Protection anti-virus software for free from SLU. Go to ITS Software Downloads under Tools on mySLU.\nYou\u0026rsquo;ll also need to download files, so you\u0026rsquo;ll need to make sure you have some free space on your hard drive. You\u0026rsquo;ll need at least a few gigabytes free. If you\u0026rsquo;re not sure how to do this, here are some instructions for Windows and macOS .\nOptions for de-cluttering include deleting files that are no longer needed, moving files to an external device, moving files to a cloud storage system, or upgrading the internal hard drive (may not be possible for macOS users and some Windows users). Make sure you know how to access your computer\u0026rsquo;s file management system.\nOn macOS, this means being comfortable with Finder.app for finding folders, making new ones, and opening files. Here are some tips for using Finder on recent versions of macOS . On Windows, this means being comfortable with Windows File Explorer for finding folders, making new ones, and opening files. Here are some tips for using File Explorer on Windows 7 and Windows 10 . Head over to the course software page to continue setting up your computer. Get Access to Books # A full list of books that are required for this course is available in the Syllabus . You will need to make a few decisions up front. One of the books must be purchased, but you will have to decide if you want an ebook or a physical copy:\nWheelan, Charles. 2014. Naked Statistics: Stripping the Dread from the Data. New York, NY: W. W. Norton \u0026amp; Company. This book can be purchased in the bookstore or online. Ebook versions are available. For two other books, you will have to decide whether you want to use the free versions available online or for .pdf download or if you would rather purchase physical copies:\nDiez, David M., Christopher D Barr, and Mine Cetinkaya-Rundel-Runde. 2015. OpenIntro Statistics. 3rd edition. OpenIntro. This book is not available from the Bookstore. You can download a free copy or purchase a physical copy from Amazon ( black \u0026amp; white or color ). Wickham, Hadley and Garrett Grolemund. 2017. R for Data Science. O’Reily Media: Sebastopol, CA. This book book can be purchased in the bookstore, online, or accessed for free as a webbook . Other Materials # The other item to purchase is a 1.5\u0026quot; three-ring binder (like high school! extra points for a Trapper Keeper !!). While all course materials are available online, they are often easier to use if they are printed. Each week you\u0026rsquo;ll receive various handouts, including cheat sheets for R, an illustration of the workflow we are focused on, the lab, and the problem set. The handouts are designed with generous margins to facilitate note-taking on them, and they\u0026rsquo;ll be distributed with holes already punched in them. Keeping these in a three-ring binder will help you refer back to your notes at a later date. You should also purchase dividers, either 16 (one for each week) or 8 (if you want to organize handouts by categories).\nCode of Conduct # The Syllabus describes the Code of Conduct that is included each of the GitHub repositories with this course. The syllabus description reads in part:\nyou should familiarize themselves with Contributor Covenant’s Code of Conduct, which is increasingly included in open source projects and is included with each lecture repository on GitHub. The Code of Conduct lays out expectations for how all students should to conduct themselves.\nBefore moving forward with the onboarding tasks, please read through both the Syllabus section on compassionate coursework as well as the copy of the Code of Conduct included in the lecture-01 repository on GitHub .\nAdministrative Tasks # There are two forms that all students must fill out by Monday August 27th:\nthe Student Information Sheet , which gives me some info about you and gives you the chance to let me know about any initial concerns you might have.\nthe un-graded Diagnostic Assessment , which is designed to get a sense of where each student\u0026rsquo;s math skills are currently. Please don\u0026rsquo;t consult outside materials as you do this - if you are not sure how to answer, please choose \u0026ldquo;I\u0026rsquo;m not sure\u0026rdquo; instead of guessing. If you look answers up it defeats the purpose of this exercise!\nCoursework # Coursework tasks that need to be completed are listed on the Syllabus under \u0026ldquo;Course Preview\u0026rdquo; and are linked to from the course preview page:\nComplete the Lecture Prep 01 form that shows you have completed this course onboarding process. Do this after you have finished the course onboarding process. Complete the reading and watch the posted videos shown under Course Preview Answer and submit the questions for Lecture Prep 02 Additionally, you\u0026rsquo;ll need to complete the readings for Lecture 01 included in the Syllabus .\n"},{"id":2,"href":"/course-software/","title":"Course Software","section":"Blah Man","content":" Meta # Overview # This course is built primarily around a trio of software applications - the programming language R, the graphical user interface for R called RStudio, and GitHub Desktop. As I noted on the course onboarding page, there are two choices for accessing software. Please read through the course onboarding page page carefully and make the decisions you think are best for you - either using your own computer or using a lab computer. Feel free to shoot me a message on Slack or via email if you have questions about which approach is best.\nInstalling R and RStudio # Software Downloads # There are two applications you will need to initially download and install to get R up and running..\nThe computing language R needs to be downloaded and installed. You can download it from R\u0026#39;s website . Choose \u0026ldquo;Download R for (Mac) OS X\u0026rdquo; or \u0026ldquo;Download R for Windows\u0026rdquo;. Windows users should look for text that says \u0026ldquo;install R for the first time\u0026rdquo; and click the base to the left of that text. Both macOS and Windows users should install R version 3.5.1, known as \u0026ldquo;Feather Spray\u0026rdquo;.1\nRStudio is a graphical user interface for R that will make learning the language and using it much, much easier. You should download the free version of RStudio from their website . Choose the appropriate installer for your platform. Make sure R is already installed before installing RStudio. As of August 10, 2018, the current version of RStudio is v1.1.456.\nIf you already have these installed, please check to make sure you are running the latest versions! If you are not running the latest versions, the installation instructions here will also work to update both applications\nInstall R Packages # There are a number of R packages that you will need for this semester. If you feel feel comfortable, go ahead and take care of this before the semester starts. If not, we\u0026rsquo;ll go over how to do this type of installation on the first day of class! All students, regardless of whether you are using RStudio on a lab computer or your own machine will need to do this.\nThe following code snipped can be pasted into your R console to install all of these required packages.\ninstall.packages(c(\u0026#34;tidyverse\u0026#34;, \u0026#34;car\u0026#34;, \u0026#34;cowsay\u0026#34;, \u0026#34;effsize\u0026#34;, \u0026#34;heplots\u0026#34;, \u0026#34;Hmisc\u0026#34;, \u0026#34;knitr\u0026#34;, \u0026#34;gapminder\u0026#34;, \u0026#34;ggridges\u0026#34;, \u0026#34;ggstatsplot\u0026#34;, \u0026#34;ggthemes\u0026#34;, \u0026#34;janitor\u0026#34;, \u0026#34;lmtest\u0026#34;, \u0026#34;moments\u0026#34;, \u0026#34;naniar\u0026#34;, \u0026#34;nortest\u0026#34;, \u0026#34;psych\u0026#34;, \u0026#34;pwr\u0026#34;, \u0026#34;remotes\u0026#34;, \u0026#34;reprex\u0026#34;, \u0026#34;rmarkdown\u0026#34;, \u0026#34;sandwich\u0026#34;, \u0026#34;skimr\u0026#34;, \u0026#34;testDriveR\u0026#34;)) Depending on your version of R and your operating system, there will be other dependencies that are required and the number of packages installed will be considerably larger. The installation process has not been extensively tested on different operating system and hardware configurations, and though it is unlikely, you may encounter issues. If you do, please let Chris know!\nChange in testDriveR\nAs of September 1, 2018, the testDriveR package is available on CRAN. Please re-install it using install.packages(\u0026ldquo;testDriveR\u0026rdquo;) before proceeding with coursework!\nGitHub Desktop # In addition to the applications above, everyone will need a local installation of GitHub Desktop, which is a graphical user interface for accessing Git and GitHub.com. It can be downloaded for free from the application\u0026#39;s website . You will need to download and run the installer. Once it is complete, you will need to login to the application with your GitHub.com username and password.\nIf you already have GitHub Desktop installed, you should check to make sure you are running the latest version of GitHub Desktop. As of August 10, 2018, the latest version is v1.3.2. If you need to update GitHub Desktop, you should also download and install the latest version of Git.\nAll of R\u0026rsquo;s version names are taken from the Peanuts comic strip .\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":3,"href":"/course-preview/","title":"Course Preview","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Overview # To set the stage for this semester, please watch the two videos below. These will take approximately 45 minutes to view. Once you have finished these videos, follow the link at the bottom of the page to answer a few short questions about what you saw. Before you begin, please make sure you have completed the course onboarding process and Lecture Prep 01! You won\u0026rsquo;t need any of the course software for this Course Preview, however, so there is no need to have installed software at this stage.\nPlain Text Science # To begin, read the introductory \u0026ldquo;chapter\u0026rdquo; (it is quite short!) to Duke University sociologist Kieran Healy\u0026#39;s primer The Plain Person\u0026#39;s Guide to Plain Text Social Science . This gives a great taste of some of the tools we\u0026rsquo;ll be using this semester (like RMarkdown) as well as some of the ideas we\u0026rsquo;ll be thinking about (like reproducibility).\nOnce you\u0026rsquo;ve ready the Kieran\u0026rsquo;s intro, please watch the first few sections of a recent talk by Hadley Wickham . He is the Chief Scientist for RStudio and developer of the tidyverse , which is a family of packages we\u0026rsquo;ll be using this semester. In fact, the original name of this family of packages was the hadleyverse. Hadley is also the author of R for Data Science , one of the books we\u0026rsquo;ll be reading this semester. In this video, Hadley speaks about why using a programming language to express yourself for data science and statistical work can be so valuable. Please watch up to 18:30, when the \u0026ldquo;Why Program in R?\u0026rdquo; slide comes up.\nFor the uninitiated, here is a description of what a GUI is.\nHere are links to the two GitHub repositories Hadley referenced during the talk:\nBC Population Indicator The history that Wickham references can be viewed here , and you can click on any of the commit messages or numbers to view how specific files have changed. This is one example from March 2018. Red text indicates deletions, and green text indicates additions. Calaveras Jumping Frog Jubilee Many (but not all of you) will have experienced some parts of these processes before. Perhaps you\u0026rsquo;ve used Microsoft Excel to organize some information or used SPSS to analyze some quantitative data. We won\u0026rsquo;t be using those tools. Instead, this course will emphasize the use of other tools that support reproducible, accurate, and collaborative data analysis. Throughout the semester, we\u0026rsquo;ll discuss why these tools are important and the advantages they have over other products that are out there.\nThe tools we use are also incredibly flexible and therefore powerful. R and Markdown, for example, were used exclusively to create this website and the Syllabus . Both websites are hosted using GitHub. Learning these tools therefore opens up doors not only for managing data and data analyses, but also for communicating your findings.\nAnalysis Development # The workflow that Hadley introduced in the first video, and the idea that you cannot do data science in a GUI, is opinionated - there is a strong premise that underlies the workflow about the ways in which spatial data (and data more generally) should be obtained, stored, modified, and mapped. Hilary Parker is a data scientist at Stichfix and also runs a data science podcast called Not So Standard Deviations . She has been speaking recently about an idea called opinionated analysis development. The video linked to below is a 25 minute talk she gave on this idea last year, and she now has a draft paper out on the topic as well. Our workflow for this semester is closely linked to the ideas she discusses in this talk.\nInspired by Hilary\u0026rsquo;s idea of opinionated analysis development, our goal each week will be to focus on the processes that can be used to increase the reproducibility and accuracy of our statistical work.\nLecture Prep 02 # The lecture prep for the first week asks three follow-up questions about these videos. Please answer these questions and submit them before class on August 27th. Answers must be submitted through Google Forms and each response should be three to four sentences in length. The questions are provided here for reference:\nBased on the typology presented by Kieran Healy, are you an \u0026ldquo;office type\u0026rdquo; or an \u0026ldquo;engineering type\u0026rdquo;? Why? Hadley Wickham introduces the idea of a workflow. In your own words, describe what you think a workflow is. What are some of the advantages of using plain text for a data analysis that Hadley and Kieran cite? In your own words, what are the key aspects of opinionated analysis development as described by Hilary Parker? "},{"id":4,"href":"/lecture-01/","title":"Lecture 01 - Course Introduction","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; View Lecture \u0026ensp; Example Code Exercise - Email Exercise - Values Functions Lecture Slides # Slack Discussions # Lecture Follow-up (Compassionate coursework and lecture recording) Levels of Measurement # Levels of measurement can be difficult to grasp without a lot of practice. To help, I\u0026rsquo;ve put together a flashcard deck that is conceptual as well as a second flashcard deck that uses R to give you some extra practice. This is my first time using Quizlet, so please let me know if you find it useful. If you have other examples you would like to share or an idea of a variable that you have a question about, send them to me on Slack and I will add them to the deck!\nConceptual Levels of Measurement # This flashcard deck does not require any additional materials. It presents conceptual variables or examples of actual variables.\nLevels of Measurement using R # This flashcard deck does require using R. It draws from the testDriveR package\u0026rsquo;s auto17 data set. All of the functions needed are covered during this lecture, so this is not only a great way to practice identifying levels of measurement but it is also a great way to get some more practice with R. Load the data from testDriveR, open it up in a way that you can see both the variable names and their values, and inspect each variable to determine its level of measurement.\nIntroducing R and RStudio # At the very end of our first class, we introduced some basic aspects of R and RStudio. An additional resource is RStudio\u0026rsquo;s cheatsheet that covers the basics of their software.\n"},{"id":5,"href":"/lecture-02/","title":"Lecture 02 - Working with Data","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Example Code Functions Lab-01 Lab-01 Replication Starter Notebook A Quick Note # The lectures are dated for 2017 but not updates are planned to the videos or slides for this year. Please watch them in order, and take the time to practice along with the examples in R for Data Science. I will have my office hours as usual on Wednesday should questions come up, and will be available on Slack all week.\nLecture 02a - Introducing ggplot2 # Slides # Video Lecture # Lecture 02b - Grammar of Graphics # Slides # Video Lecture # Lecture 02c - Verbs for Cleaning Data # Note: The video is titled \u0026ldquo;Lecture 3\u0026rdquo; - this is not a mixup, just a holdover from a past semester!\nSlides # Video Lecture # Lecture 02d - Structuring Notebooks # Note: The video is titled \u0026ldquo;Lecture 4\u0026rdquo; - this is not a mixup, just a holdover from a past semester!\nSlides # Video Lecture # Slack Discussions # Lecture Release testDriveR updates Final Project questions General coursework questions Error messages in R and package installation Notebook structure Data for Assignments # The data that you need for many of the assignments this semester is available as an R package named testDriveR. On the initial course software instructions, you were told to download and install it from GitHub. As of September 1, I am happy to annouce that testDriveR is on CRAN. Please re-install the package:\ninstall.packages(\u0026#34;testDriveR\u0026#34;) Starter Notebook # Based on a question from a student, I\u0026rsquo;ve posted an empty notebook structure that you can use to start your assignments. If you click on the Raw button, or follow this link, you\u0026rsquo;ll get plain text that you can copy into RStudio.\nCheatsheets # RStudio offers a number of cheatsheets that you may find useful. FYI - they offer way more detail than what I provide. This is intentional on my part. So, if you feeling confident and are looking to build upon what a particular week covers, check them out!\nggplot2 dplyr rmarkdown Extra Information # This week, I mentioned a number of important figures. If you want more information, you can check out these Wikipedia pages:\nRené Descartes Donald Knuth George Boole "},{"id":6,"href":"/lecture-03/","title":"Lecture 03 - Describing Distributions","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; View Lecture \u0026ensp; Equations Functions Lab 02 Lab 02 Replication Lecture Prep 03 Lecture Prep 03 Submission Problem Set 01 Workflow Handouts Lecture Slides # Using LaTeX in R Notebooks # If you check out the replication notebook for this week\u0026rsquo;s lab, you will notice dollar signs used around references to particular variables like this - $x_1$. This is your first exposure to LaTeX syntax. The dollar signs instructs LaTeX/knitr to enter \u0026ldquo;math mode\u0026rdquo;, which displays equations and mathematical notation. The underscore instructs LaTeX/knitr that the \u0026ldquo;1\u0026rdquo; should be treated as a subscript (i.e. \u0026ldquo;x sub 1\u0026rdquo;). Note that this does not look great when you look at the html output\u0026rsquo;s headers. So, it may take some experimentation to get it working perfectly.\nExtra Information # This week, I mentioned a number of important statisticians. If you want more information, you can check out these Wikipedia pages:\nFriedrich Bessel Ronald Fisher William Sealy Gosset "},{"id":7,"href":"/lecture-04/","title":"Lecture 04 - Probability and Bayes' Theorem","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; View Lecture \u0026ensp; Equations Lab 03 Lab 03 Replication Lecture Prep 04 Lecture Prep Replication # Lecture Slides # Probability in the News # FiveThirtyEight published a great article on the use probability in news media coverage in 2017. The article raises important points about how error in public polling is communicated:\nAs I’ve documented throughout this series, polls and other data did not support the exceptionally high degree of confidence that news organizations such as The New York Times regularly expressed about Hillary Clinton’s chances.\nOne of the key takeaways for me was this line:\nWhat can also get lost is that election forecasts — like hurricane forecasts — represent a continuous range of outcomes, none of which is likely to be exactly right.\nWhen we talk about the likelihood of an event, we are really trying to summarize a range of possible outcomes. Keep that in mind as we progress through the semester!\nJohn Edmund Kerrich # One of the important statisticians we discussed this week was John Edmund Kerrich. You can explore Kerrich\u0026rsquo;s data using testDriveR:\nlibrary(testDriveR) coinFlips \u0026lt;- kerrich ggplot(data = coinFlips) + geom_hline(mapping = aes(yintercept = .5, color = \u0026#34;p(heads)\u0026#34;)) + geom_line(mapping = aes(x = id, y = average)) + ylim(0,1) The ggplot2 syntax above adds only a slight increase in complexity from your previous plots. We\u0026rsquo;ve added a second geom that is layered under the primary geom_line() that we discussed during Lecture 02. This geom_hline() allows us to add a horizontal line at y = .5, which is the predicted probability of either outcome of a fair coin flip. We\u0026rsquo;ve also modified the y-axis so that it runs from 0 to 1, covering the full range of possible probabilities.\nExtra Information # This week, I mentioned a number of important statisticians. If you want more information, you can check out these Wikipedia pages:\nJacob Bernoulli Abraham de Moivre Thomas Bayes We also talked about a number of statistical fallacies. One of them was Meadow\u0026rsquo;s Law, which you can read about on Wikipedia and in various news articles, including this one from 60 Minutes.\n"},{"id":8,"href":"/lecture-05/","title":"Lectue 05 - The Distribution of Random Variables","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; View Lecture \u0026ensp; Equations Functions Lab 04 Lab 04 Replication Problem Set 02 Lecture Slides # Grappling with p-values # Here are a couple of links for digging further into what p-values are and how we explain them:\nAmerican Statistical Association\u0026rsquo;s Statement on p-values ``Mission Improbable: A Concise and Precise Definition of P-Value\u0026rsquo;\u0026rsquo; - Science Magazine interview with Victor De Gruttola ``Science Isn\u0026rsquo;t Broken\u0026rsquo;\u0026rsquo; - FiveThirtyEight article on p-values ``Not Even Scientists Can Easily Explain P-values\u0026rsquo;\u0026rsquo; - FiveThirtyEight article on p-values, includes the video I mentioned in class Andrew Gelman\u0026rsquo;s views on p-values ``Abandon Statistical Significance\u0026rsquo;\u0026rsquo; - Andrew Gelman and others Gelman and John Carlin suggest some solutions for the ``p-value communication problem\u0026rsquo;\u0026rsquo; ``It will be much harder to call new findings ‘significant’ if this team gets its way\u0026rsquo;\u0026rsquo; - Science Magazine article on changing culture around p-values Histograms with the Normal Distribution Overlaid in ggplot2 # I introduced the idea of a histogram with a normal distribution overlaid during this week\u0026rsquo;s lecture, but purposely did not include the syntax on our quick reference sheet for R functions. If you are interested in playing with the syntax, it is included below. We make one key change to the initial ggplot() call - the aesthetic mapping is included in the initial ggplot() function rather than in a specific geom. We also covert the hwy variable\u0026rsquo;s representation from frequency to density, and layer on top of this our normal distribution by using the stat_function() function. Make sure to update the arguments for stat_function() if you want to adjust this example, and note that we have to specify the data frame and the variable name separated by a $.\nlibrary(ggplot2) ggplot(data = mpg, mapping = aes(hwy)) + geom_histogram(mapping = aes(y = ..density..)) + stat_function(fun = dnorm, color = \u0026#34;red\u0026#34;, args=list(mean=mean(mpg$hwy), sd=sd(mpg$hwy))) Performing Calculations # During class this week, I briefly described how to perform calculations and save results in R. You can use standard mathematical operators +, -, /, and * to add, subtract, divide, and multiply (respectively). These are reviewed in the week-02-lecture-03-rQuickref.pdf file in the Week-02 repo on GitHub. Quickly, we can calculate a value like lambda within R, save it as an object, and reference the object in later calculations:\n\u0026gt; lambda \u0026lt;- 100000 * .00004 \u0026gt; dpois(6, lambda = lambda) [1] 0.1041956 Reading in Arbitrary Vectors to R # Problem Set 04 asks you to find the variance of an arbitrary set of values in a vector (list) of numbers. These can easily be read into R so that you do not have to calculate the variance by hand. You can use the same technique to check your work as you calculate skew and kurtosis by hand.\nTo begin: Let x = 2, 4, 6, 8, 10\nx \u0026lt;- c(2, 4, 6, 8, 10) Once you add these values into R\u0026rsquo;s memory, you will be able to see them in your environment tab and will be able to include them in calculations:\n\u0026gt; mean(x) [1] 6 Extra Information # This week, I mentioned a number of important statisticians. If you want more information, you can check out these Wikipedia pages:\nJacob Bernoulli Ladislaus Bortkiewicz Abraham de Moivre Ronald Fisher Francis Galton Carl Friedrich Gauss Pierre-Simon Laplace Blaise Pascal Karl Pearson Siméon Denis Poisson Additionally, here is the link to the quincunx simulation we talked about in class!\n"},{"id":9,"href":"/lecture-06/","title":"Lecture 06 - Foundations for Inference","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Lab 05 Lecture Prep 06 Problem Set 03 Lecture Slides # Central Limit Theorem Simulator # The simulator we discussed in class that shows how the central limit theorem works can be found here.\nArticles on p-hacking # At the end of this lecture, there is a discussion of p-hacking - the manipulation (often intentional, but we also discussed more generally how p-values can be unintentionally manipulated) of statistical significance. Here are the two articles that were metnioned:\nHack your way to scientific glory Science Isn’t Broken Extra Information # This week, I mentioned a number of important statisticians. If you want more information, you can check out these Wikipedia pages:\nWilliam Sealy Gosset Abraham de Moivre Pierre-Simon Laplace "},{"id":10,"href":"/lecture-07/","title":"Lecture 07 - Difference of Means (Part 1)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Equations Function, Assignment Function, Lecture Functions Lab-06 LP-07 T-test Workflow Lecture Slides # Lecture Prep Replication # A notebook based on the replication video is available on GitHub.\nCohen\u0026rsquo;s D Animations # The website rpsychologist contains some excellent Cohen\u0026rsquo;s d visualizations that I find particularly useful for thinking about how different effect sizes look.\nProbability Under the t Distribution # This \u0026ldquo;gist\u0026rdquo; contains the code we wrote together in class, which also appears on the back of the functions handout for this lecture.\nThis script works very well for one-tailed t tests, but needs some modification for our assignment this week. For assignments, please use this more general version of the function:\n"},{"id":11,"href":"/lecture-08/","title":"Lecture 08 - Difference of Means (Part 2)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-07 LP-08 Lecture Slides # Tips for Working with Paired Data # The lab and the problem set for this week both include paired data, and you may run into a couple of issues that I want to hight.\nIssues with Plots # The first issue that may arise is related to plotting data that are long. Following the examples from class, you may be tempted to use the year variable, unedited, to your plot. It will produce the following plot: Even those we specified that year should be the x variable, it does not provide two boxes on the plot. This ibecause the x variable, year in this case, is numeric. To do this correctly, we need toeither (a) include a third option in our aesthetic mapping called group that is set equal to our year variable or (b) convert year to a factor or a string. Once we do, ggplot2 will produce the following plot: Issues with Variable Names # When we convert incomeLong to incomeWide, the variable names become 2010 and 2015. Trying to call a function with these variable names (like mean(incomeWide$2010)) will produce an error. You must wrap numeric variable names in back ticks, like so:\nmean(incomeWide$`2010`) This will allow the code to execute properly.\n"},{"id":12,"href":"/lecture-09/","title":"Lecture 09 - Factors","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-08 Lab-08 Replication Lecture Video # "},{"id":13,"href":"/lecture-10/","title":"Lecture 10 - Correlation (Part 1)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Equations Handout Example Lab-09 Lecture Slides # Lecture Prep # Instructions # The instructions for this week\u0026rsquo;s lecture prep are available in the Week-10-Deprecated GitHub repository. Make sure you submit your work and answers by the beginning of class on Monday!\nReplication # Correlation with Binary Variables # There is one point missing from today\u0026rsquo;s lecture that comes up on the lab. I mentioned that the assumptions of correlation are that x and y are continous. Given some of the details we\u0026rsquo;ve already covered with the binomial distribution, we can extend Pearson\u0026rsquo;s r to binary variables as well. These are interpretd slightly differently, since there is not \u0026ldquo;increase\u0026rdquo; in the binary variable in practical terms. We interpret them in relation to the 1 or TRUE category:\nThe correlation (r = .54, p \u0026lt; .001) between x, a binary variable, and y, suggests that the TRUE category is associated with an increase in y.\n"},{"id":14,"href":"/lecture-11/","title":"Lecture 11 - Correlation (Part 2)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; corrTable.R Functions Lab-10 LaTeX PS-05 Lecture Slides # "},{"id":15,"href":"/lecture-12/","title":"Lecture 12 - OLS Regression (1)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-11 LaTeX Lecture Slides # More on Plots # Line Breaks in Plot Text # We discussed this informally in class, and I wanted to clarify the technique for adding line breaks here. In situations where the size of the text has been increased or the quantity of text is quite large (a lengthy caption, for example), it is easy for the text to run off the sides of the plot. You can force a line break in text within ggplot2 using the \\n operator:\nlibrary(ggplot2) ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = as.factor(cyl)), size = 2, position = \u0026#34;jitter\u0026#34;) + geom_smooth(method = \u0026#34;lm\u0026#34;) + labs( title = \u0026#34;Fuel Efficiency and Engine Size \\nof Consumer Automobiles\u0026#34;, subtitle = \u0026#34;Select Vehicles Sold in the United States\u0026#34;, x = \u0026#34;Engine Displacement (litres)\u0026#34;, y = \u0026#34;Highway Fuel Efficiency (mpg)\u0026#34; ) This example clearly does not call for the line break, since the text would not have run off the side of the plot. Adding the break here therefore only serves to sacrifice the amount of space that can be dedicated to the data themselves because it shrinks the available real estate for the main portion of the plot.\n"},{"id":16,"href":"/lecture-13/","title":"Lecture 13 - OLS Regression (2)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-12 Workflow Lecture Slides # "},{"id":17,"href":"/lecture-14/","title":"Lecture 14 - OLS Regression (3)","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-13 PS-06 Lecture Slides # "},{"id":18,"href":"/lecture-15/","title":"Lecture 15 - ANOVA","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-14 Workflow - ANOVA Lecture Slides # Summary Functions # RStudio has an excellent data wrangling cheat sheet that includes a list of the summary functions you can use with dplyr::summarize(). You can access the cheat sheet from their website.\n"},{"id":19,"href":"/lecture-16/","title":"Week 16 - Chi-Squared","section":"Blah Man","content":" Meta # Key Topics # Resources # Open on \u0026ensp; Open on \u0026ensp; Functions Lab-15 Workflow - Chi-Square Lecture Slides # Bar Plots # We covered bar plots very quickly during Week-02 of the semester. They are created using the geom_bar() geom in a ggplot2 call:\nggplot(data = mpg, mapping = aes(class)) + geom_bar() "},{"id":20,"href":"/license/","title":"License","section":"Blah Man","content":"Copyright (c) 2016-2017 Christopher G. Prener\nThis work is licensed under a Creative Commons Attribution 4.0 International License.\nThis is a human-readable summary of (and not a substitute for) the license.\nYou are free to:\nShare — copy and redistribute the material in any medium or format Adapt — remix, transform, and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms as long as you follow the license terms. Under the following terms:\nAttribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. No additional restrictions — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\nNotices:\nYou do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.\nNo warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.\n"},{"id":21,"href":"/final/","title":"Final Project","section":"Blah Man","content":" Meta # Resources # Open on \u0026ensp; Open on \u0026ensp; Directions Overview # The final project corresponds to the fourth course learning outcome, which is described in the Syllabus as:\nQuantitative research synthesis: Plan, implement (using R), and present (using knitr as well as the word processing and presentation applications of your choice) a research project that uses linear regression to answer a research question. All students will select a set of variables from a data set and perform an original data analysis culminating in a series of linear regression models. Each student will be responsible for selecting a research question, establishing a hypothesis, conducting an analysis to test that hypothesis, and presenting the results. This process and project mirrors the steps taken to author a quantitative conference presentation (for all students) and a quantitative journal article (for students enrolled in SOC 5050).\nWaypoints (All Students) # The final project instructions include \u0026ldquo;waypoints\u0026rdquo; - designated check-in times for students to ensure that everyone continues to make consistent forward progress throughout the semester (see the Syllabus and the Directions). The next waypoint will be highlighted with bold font throughout the semester.\nLecture-05 (September 24th) - Progress report from each student due as a GitHub issue in each student\u0026rsquo;s final project repository Lecture-08 (October 15th) - Progress report from each student due as a GitHub issue in each student\u0026rsquo;s final project repository Lecture-11 (November 5th) - Draft slides and handout due in each student\u0026rsquo;s final project repository Lecture-12 (November 12th) - Peer reviews due to group members as a GitHub issue in each student\u0026rsquo;s final project repository Lecture-15 (December 3rd) - Progress report from each student due as a GitHub issue in each student\u0026rsquo;s final project repository Final Presentations (December 17th) - Response to reviewer due in the GitHub issue opened by the reviewer Waypoints (SOC 5050 only) # Lecture-07 (October 8th) - Annotated bibliography due in each student\u0026rsquo;s final project repository Lecture-12 (Novemeber 12th) - Draft paper due in each student\u0026rsquo;s final project repository Lecture-13 (Novemeber 19th) - Peer reviews of paper due to group members as a GitHub issue in each student\u0026rsquo;s final project repository Final Presentations (December 17th) - Response to paper reviewer due in the GitHub issue opened by the reviewer "},{"id":22,"href":"/topic-index/","title":"Topic Index","section":"Blah Man","content":" Meta # The following is a list of topics and skills covered during the semester. This will grow as we progress through the coursework. Italicized items are only covered in the readings. If you have additions or suggestions, please let Chris know!\nA-D # Analysis development (Course Preview, Lecture-01, Lecture-02, Lecture-03) Anscombe\u0026rsquo;s quartet (Lecture-03) Assignment (Lecture-01) Assignment operator, \u0026lt;- base Calculate mean, mean() (Lecture-03) Create binary conditions, ifelse() (Lecture-02) Frequency table, table() (Lecture-03) Get names of object, names() (Lecture-01) Load packages, library() (Lecture-01) Maxmium value of vector, max() (Lecture-03) Minimum value of vector, min() (Lecture-03) Range values of vector, range() (Lecture-03) Sort or order a vector, sort() (Lecture-01) Summarize data frame or vector, summary() (Lecture-03) View working directory path, getwd() (Lecture-01) cowsay (Lecture-01) Creating ASCII character, say() Data tidy data concepts (Lecture-01) Data cleaning ordering (Lecture-02) subsetting (Lecture-02) variable creation and modification (Lecture-02) see also dplyr datasets Anscombe quartet data, datasets (Lecture-03) Old Faithful geyser data, faithful (Lecture-01) Degrees of freedom (Lecture-03) Descriptive statistics (Lecture-03) dplyr Create new variables, mutate() (Lecture-02) see also base::ifelse() Modify contents of existing variables, mutate() (Lecture-02) Rename variables, rename() (Lecture-02) Reorder variables, arrange() and desc() (Lecture-02) Subset by columns, select() (Lecture-02) Subset by observations, filter() (Lecture-02) see also Operators E-H # Exploratory data analysis (Lecture-03) Getting help With R, including ? and ?? (Lecture-01) see also reprex and Reproducible examples ggplot2 Basic use Create ggplot object, ggplot() (Lecture-02) Change to horizontal, coord_flip() (Lecture-02) Color and asthetic mappings, color and fill (Lecture-02) Position adjustments, dodge and jitter (Lecture-02) Geoms Area plot, geom_area() (Lecture-02) Bar plot, geom_bar() (Lecture-02) Box plot, geom_box() (Lecture-02) Density plot, geom_density() (Lecture-03) Line plot, geom_freqpoly() (Lecture-02) Scatter plot, geom_point() (Lecture-02) Smoothed line plot, geom_smooth() (Lecture-02) GitHub Basic use (Course Preview, Lecture-01) I-L # janitor Frequency table, tabyl() (Lecture-03) knitr With notebooks (Lecture-02) Levels of measurement (Course Preview) M-P # Magritter see Operators, Pipe operator Model fit Conceptual definition (Lecture-03) Outliers and the mean (Lecture-03) Notebooks (Lecture-02) Operators Arithmatic operators, +, -, *, /, and ^ (Lecture-02) Logical operators, \u0026amp; and | (Lecture-02) Pipe operator, %\u0026gt;% (Lecture-02) Relational operators, \u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=, ==, and != (Lecture-02) Package installation (Lecture-01) From CRAN, see utils package entry From GitHub, see remotes package entry Plotting and visualization Basic elements of design (Lecture-02) see also ggplot2 Q-T # R Basic use (Course Preview, Lecture-01) Data cleaning (Lecture-02) remotes (Lecture-01) Install packages from GitHub, install_github() reprex Produce reproducible example, reprex() (Lecture-03) Reproducible Examples (Lecture-03) Reproducibility (Course Preview, Lecture-03) rmarkdown (Course Preview, Lecture-02) skimr Produce descriptive statistics table, skim() (Lecture-03) stats Calculate median, median() (Lecture-03) Calculate standard deviation, sd() (Lecture-03) Calculate variance, var() (Lecture-03) Calculate inter-quartile range, IQR() (Lecture-03) Summation notation (Lecture-03) testDriveR Automobile data for 2017, auto17 (Lecture-01, Lecture-02) U-Z # utils (Lecture-01) Install packages from CRAN, install.packages() (Lecture-01) Print first six observations, head() (Lecture-02) last six observations, tail() (Lecture-02) Structure of an object, str() (Lecture-01) Spreadsheet-like data view, View() (Lecture-01) Update packages from CRAN, update.packages() (Lecture-01) Version control (Course Preview) Workflow (Course Preview) "},{"id":23,"href":"/package-index/","title":"Package Index","section":"Blah Man","content":" Meta # The following is a list of packages used during the semester along with links to additional resources. This list does not include dependencies that may be installed for these packages to work. Unless otherwise noted, packages are available via CRAN and can be installed using base::install.packages(\u0026quot;packageName\u0026quot;).\nIcon reference # - Topic index - CRAN site - GitHub repo - Website - RStudio Cheatsheet - Book Base R Packages # base - base functions datasets - Teaching data that comes with base R stats - statistical functions utils - utility functions Data Packages # gapminder - Teaching data from Gapminder project testDriveR - Data sets for teaching Tidyverse Packages # Core Tidyverse Packages # Use install.packages(\u0026quot;tidyverse\u0026quot;) to install these for convenience!\nbroom - creation of tidy output dplyr - data wrangling forcats - factors ggplot2 - data plotting magrittr - pipe operator tidyr - data wrangling Additional Tidyverse Packages # These must be installed independently!\nreprex - reproducible examples Statistical Packages # car - variety of statistical functions effsize - effect size calculations Hmisc - variety of statistical functions, including correlations lmtest - assumption and fit tests for OLS models moments - normality testing naniar - missing data analysis nortest - normality testing psych - Cronbach\u0026rsquo;s alpha pwr - power analysis calculations skimr - descriptive statistics Data Output Packages # ggridges - ridge plots ggstatsplot - statistical plots ggthemes - plot themes heplots - diagnostic plots janitor - data wrangling and tables knitr - dynamic documents in R RMarkdown - markdown syntax for R Other Utility Packages # cowsay - fun ASCII characters here - working directory management remotes - install packages from GitHub "}]